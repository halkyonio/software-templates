apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: quarkus-web-template
  title: Quarkus Service
  description: Create a simple microservice using Quarkus Java
  tags:
    - recommended
    - java
    - quarkus
    - maven
spec:
  owner: service@example.com
  type: service

  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - owner
        - organization
        - java_package_name
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
        group_id:
          title: Group Id
          type: string
          description: Maven Group Id
        artifact_id:
          title: Artifact Id
          type: string
          description: Maven Artifact Id
        java_package_name:
          title: Java Package Name
          type: string
          description: Name for the java package. eg (com.redhat.blah)
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
        organization:
          title: Organization
          type: string
          description: Organization of this application
          ui:field: OrganizationPicker
          ui:options:
            allowedKinds:
              - Group
        application:
          title: Application
          type: string
          description: Name of the application
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - id: template
      name: Generating component
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          group_id: ${{ parameters.group_id }}
          artifact_id: ${{ parameters.artifact_id }}
          java_package_name: ${{ parameters.java_package_name }}
          owner: ${{ parameters.owner }}
          organization: ${{ parameters.organization }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          http_port: 8080

    - id: publish
      name: Publishing to Source Code Repository
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Registering to the Catalog
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"
 
    - id: template-tenant-gitops 
      name: tenant Argcd Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./app-gitops
        copyWithoutRender: []
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          artifact_id: ${{ parameters.component_id }}
          java_package_name: ${{ parameters.java_package_name }}
          owner: ${{ parameters.owner }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          http_port: 8080
          application: ${{ parameters.application }}
        targetPath: ./tenant-gitops          

    - id: pull-request
      name: make a pr with the new argocd
      action: publish:github:pull-request
      input:
        repoUrl: github.com?repo=${{ parameters.application.split(":")[1] }}-gitops&owner=${{ parameters.organization }}
        branchName: ${{ parameters.component_id }}
        title: argocd apps for ${{ parameters.component_id }}
        description: argocd apps ${{ parameters.component_id }}
        sourcePath: ./tenant-gitops
  output:
    links:
      - title: Source Code Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open Component in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
